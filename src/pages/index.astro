---
import Layout from "../layouts/Layout.astro";
import { Image } from "astro:assets";
import { createClient } from "@sanity/client";
import beau_cafe from "../assets/beau-cafe.png";
import Testimonials from "../components/Testimonials.astro";

interface Post {
  title: string;
  slug: string;
  publishedAt: string;
  excerpt: string;
  mainImage: { asset: { url: string } };
}

interface SpotifyEpisode {
  name: string;
  description: string;
  release_date: string;
  external_urls: {
    spotify: string;
  };
  images: Array<{
    url: string;
    height: number;
    width: number;
  }>;
  id: string;
}

const client = createClient({
  projectId: import.meta.env.SANITY_PROJECT_ID || "agaaxyz0",
  dataset: import.meta.env.SANITY_DATASET || "production",
  apiVersion: "2024-03-08",
  useCdn: true,
});

const posts = await client.fetch(`
  *[_type == "post"] | order(publishedAt desc) {
    title,
    slug,
    publishedAt,
    excerpt,
    mainImage {
      asset-> {
        _id,
        url
      }
    }
  }[0...3]
`);

const recentPosts = await client.fetch(`
  *[_type == "post"] | order(publishedAt desc)[0...6] {
    title,
    slug,
    publishedAt,
    excerpt,
    mainImage {
      asset-> {
        _id,
        url
      }
    }
  }
`);

const authOptions = {
  method: "POST",
  url: "https://accounts.spotify.com/api/token",
  headers: {
    Authorization:
      "Basic " +
      Buffer.from(
        import.meta.env.SPOTIFY_CLIENT_ID +
          ":" +
          import.meta.env.SPOTIFY_CLIENT_SECRET
      ).toString("base64"),
    "Content-Type": "application/x-www-form-urlencoded",
  },
  body: new URLSearchParams({
    grant_type: "client_credentials",
  }).toString(),
};

const response = await fetch(authOptions.url, {
  method: authOptions.method,
  headers: authOptions.headers,
  body: authOptions.body,
});
const data = await response.json();
const accessToken = data.access_token;

const podcastEpisodes = await fetch(
  "https://api.spotify.com/v1/shows/6kVyePtw85mqjZvWqqQa7s/episodes",
  {
    method: "GET",
    headers: {
      Authorization: `Bearer ${accessToken}`,
    },
  }
);

const episodesData = await podcastEpisodes.json();
---

<Layout title="Buried In The Bones">
  <section class="h-[100vh] hero-image flex items-center justify-end isolate">
    <div
      class="mx-auto absolute w-[100vw] h-[100vh] flex items-center justify-center after:content-[''] after:inset-0 after:absolute after:bg-ebony after:opacity-80 after:mix-blend-multiply after:z-1"
    >
      <div class="flex flex-col items-end justify-center w-[80%]">
        <h1
          class="text-7xl md:text-8xl font-customFont animate-fade-in-left text-floralWhite z-10 text-right"
        >
          Buried In The Bones
        </h1>
        <h2
          class="text-floralWhite font-customFont text-4xl md:text-5xl text-right"
        >
          <span class="animate-fade-in-delayed-1 inline-block">Philosophy,</span
          >
          <span class="animate-fade-in-delayed-2 inline-block">fitness,</span>
          <span class="animate-fade-in-delayed-3 inline-block">mindset,</span>
          <span class="animate-fade-in-delayed-4 inline-block"
            >and real talk.</span
          >
        </h2>
        <div
          class="flex flex-col md:flex-row gap-4 md:gap-6 animate-fade-in-left z-10 mt-6"
        >
          <button
            class="bg-khaki text-floralWhite hover:bg-floralWhite hover:text-ebony px-4 py-2 md:px-5 md:py-3 transition-colors duration-300 font-condensed mt-6 rounded-sm text-lg"
            ><a href="/podcast">Listen and Learn</a></button
          >

          <button
            class="bg-khaki text-floralWhite hover:bg-floralWhite hover:text-ebony px-4 py-2 md:px-5 md:py-3 transition-colors duration-300 font-condensed mt-6 rounded-sm text-lg"
            ><a href="/workouts">Strength & Conditioning Programs</a></button
          >
        </div>
      </div>
    </div>
  </section>

  <section class="min-h-[100vh] h-auto mx-auto py-24 px-4 background-drawing">
    <div class="max-w-7xl mx-auto">
      <div class="flex flex-col md:flex-row gap-12 md:gap-16">
        <div
          class="w-full md:w-1/2 flex flex-col justify-center items-start gap-12"
        >
          <h2 class="text-ebony text-6xl font-customFont">
            In Pursuit of the 3 M's:
            <br />
            <b>Mind, Movement, Meaning.</b>
          </h2>
          <p
            class="text-xl md:text-2xl text-left text-jet md:py-18 pr-6 font-condensed"
          >
            I'm Beau. I'm a strength & conditioning coach and martial artist.
            This is my podcast. I have a BS in Kinesiology, CSCS, FRCms, CFSC,
            TPI L2's and I've worked with some of the highest-performing
            athletes in the world.
            <br /><br /> I started this podcast for normal people in search of self-discovery,
            growth, and adventure. If that sounds like you, then get ready to dig
            deep.
          </p>
          <button
            class="bg-rawUmber text-floralWhite hover:bg-ebony px-5 py-3 md:px-7 md:py-5 transition-colors duration-300 font-condensed mt-6 rounded-sm text-xl"
          >
            <a href="/podcast">Listen To The Podcast</a>
          </button>
        </div>

        <div class="w-full md:w-1/2 relative">
          <div
            class="absolute h-[90%] w-full bg-ebony rounded-sm transform right-4 md:right-12 bottom-4 md:bottom-18"
          >
          </div>
          <div
            class="absolute h-full w-full bg-rawUmber rounded-sm transform top-4 md:top-8 left-4 md:left-12"
          >
          </div>
          <Image
            src={beau_cafe}
            alt="Strength Training"
            class="rounded-sm shadow-xl w-full h-auto relative z-10"
            width={1000}
            height={1000}
          />
        </div>
      </div>
    </div>
  </section>

  <section class="min-h-[100vh] mx-auto py-24 px-4 bg-ebony">
    <h2
      class="text-6xl font-customFont uppercase text-center mb-12 px-12 text-floralWhite"
    >
      Latest Episodes
    </h2>
    <div class="grid grid-cols-1 md:grid-cols-2 gap-8 px-4 max-w-7xl mx-auto">
      {
        episodesData.items.slice(0, 4).map(
          (episode: SpotifyEpisode, index: number) =>
            episode && (
              <div class="bg-floralWhite p-6 rounded-sm flex flex-col justify-between">
                <div
                  class="podcast-iframe-container mb-4"
                  data-episode-id={episode.id}
                  data-index={index}
                >
                  <div class="bg-gray-200 rounded-lg h-[300px] flex items-center justify-center">
                    <div class="text-center">
                      <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-ebony mx-auto mb-2" />
                      <p class="text-gray-600">Loading podcast...</p>
                    </div>
                  </div>
                </div>
                <h3 class="text-2xl font-customFont mb-2">{episode.name}</h3>
                <p class="text-gray-600 mb-4 line-clamp-3 font-condensed">
                  {episode.description}
                </p>
                <div class="flex justify-between items-center">
                  <span class="text-sm text-gray-500">
                    {new Date(episode.release_date).toLocaleDateString()}
                  </span>
                  <a
                    href={episode.external_urls.spotify}
                    target="_blank"
                    rel="noopener noreferrer"
                    class="bg-ebony hover:shadow-lg text-white px-4 py-2 transition-colors rounded-sm"
                  >
                    Listen In Spotify
                  </a>
                </div>
              </div>
            )
        )
      }
    </div>
    <div class="flex justify-center h-100">
      <button
        class="bg-floralWhite hover:shadow-lg text-ebony hover:ebony text-xl px-6 py-4 mt-12 transition-colors duration-200 rounded-sm"
      >
        <a href="/podcast">See All Episodes</a>
      </button>
    </div>
  </section>

  <Testimonials />

  <section class="container mx-auto py-24 px-4 bg-medusa">
    <h2
      class="text-6xl font-customFont uppercase text-center mb-12 px-12 text-jet"
    >
      Recent Writing
    </h2>
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 px-4">
      {
        recentPosts.map((post: any) => (
          <article class="bg-ebony p-6 rounded-sm shadow-lg hover:shadow-xl transition-shadow duration-300">
            {post.mainImage && (
              <img
                src={post.mainImage.asset.url}
                alt={post.title}
                class="w-full h-48 object-cover rounded-sm mb-4 text-floralWhite"
              />
            )}
            <h3 class="text-2xl font-customFont mb-2 text-floralWhite">
              <a
                href={`/blog/${post.slug.current}`}
                class="hover:text-ebony transition-colors"
              >
                {post.title}
              </a>
            </h3>
            <p class="text-floralWhite mb-4">
              {new Date(post.publishedAt).toLocaleDateString()}
            </p>
            {post.excerpt && (
              <p class="text-floralWhite mb-4 line-clamp-3">{post.excerpt}</p>
            )}
            <a
              href={`/blog/${post.slug.current}`}
              class="inline-block bg-floralWhite hover:shadow-lg text-ebony px-4 py-2 rounded-sm transition-colors"
            >
              Read More
            </a>
          </article>
        ))
      }
    </div>
    <div class="flex justify-center mt-12">
      <a
        href="/writing"
        class="bg-ebony hover:bg-ebony text-white px-6 py-3 rounded-sm transition-colors duration-300"
      >
        View All Writing
      </a>
    </div>
  </section>
</Layout>

<style>
  .hero-image {
    background-image: url("../assets/frame1.png");
    background-size: cover;
  }

  @media (max-width: 768px) {
    .hero-image {
      background-size: cover;
      background-position: 40% 80%;
    }
  }

  .background-drawing {
    background-image: url("../assets/body-drawing.jpeg");
    background-size: contain;
    background-repeat: repeat-x;
    background-position: center;
  }

  .bg-medusa {
    background-image: url("../assets/medusa-drawing.jpeg");
    background-size: contain;
    background-repeat: repeat-x;
    background-position: center;
  }
</style>

<script>
  // Lazy loading for podcast iframes
  document.addEventListener("DOMContentLoaded", function () {
    const podcastContainers = document.querySelectorAll(
      ".podcast-iframe-container"
    );

    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            const container = entry.target;
            const episodeId = container.getAttribute("data-episode-id");

            // Create and insert the iframe
            const iframe = document.createElement("iframe");
            iframe.style.borderRadius = "6px";
            iframe.src = `https://open.spotify.com/embed/episode/${episodeId}/video?utm_source=generator`;
            iframe.width = "100%";
            iframe.height = "300";
            iframe.allowFullscreen = true;
            iframe.allow =
              "autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture";
            iframe.setAttribute(
              "sandbox",
              "allow-same-origin allow-scripts allow-popups allow-forms"
            );

            // Replace the loading placeholder with the iframe
            container.innerHTML = "";
            container.appendChild(iframe);

            // Stop observing this container
            observer.unobserve(container);
          }
        });
      },
      {
        rootMargin: "50px", // Start loading when within 50px of viewport
        threshold: 0.1,
      }
    );

    // Start observing all podcast containers
    podcastContainers.forEach((container) => {
      observer.observe(container);
    });
  });
</script>
