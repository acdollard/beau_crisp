---
// JavaScript/TypeScript code goes here
import Layout from "../layouts/Layout.astro";
import { createClient } from "@sanity/client";

const client = createClient({
  projectId: "agaaxyz0",
  dataset: "production",
  apiVersion: "2024-03-08",
  useCdn: true,
});

interface WorkoutPlan {
  title: string;
  slug: { current: string };
  startDate: string;
  endDate?: string;
  description?: string;
  client?: {
    name: string;
  };
}

// This would typically be filtered by the logged-in user's ID
const workoutPlans = await client.fetch<WorkoutPlan[]>(`
  *[_type == "workoutPlan"] | order(startDate desc) {
    title,
    slug,
    startDate,
    endDate,
    description,
    client-> {
      name
    }
  }
`);
---

<Layout title="Workout Plans - Beau Crisp">
  <div class="max-w-4xl mx-auto">
    <div class="flex justify-between items-center mb-8">
      <h1 class="text-4xl font-bold">Workout Plans</h1>
      <a
        href="/workouts/new"
        class="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700"
      >
        Create New Plan
      </a>
    </div>

    <div class="grid gap-6">
      {
        workoutPlans.map((plan: WorkoutPlan) => (
          <div class="bg-white p-6 rounded-lg shadow">
            <div class="flex justify-between items-start">
              <div>
                <h2 class="text-2xl font-bold mb-2">
                  <a
                    href={`/workouts/${plan.slug.current}`}
                    class="hover:text-blue-600"
                  >
                    {plan.title}
                  </a>
                </h2>
                <p class="text-gray-600 mb-2">Client: {plan.client?.name}</p>
                <p class="text-gray-600 mb-4">
                  {new Date(plan.startDate).toLocaleDateString()} -
                  {plan.endDate
                    ? new Date(plan.endDate).toLocaleDateString()
                    : "Ongoing"}
                </p>
              </div>
              <div class="space-x-2">
                <a
                  href={`/workouts/${plan.slug.current}/edit`}
                  class="inline-block bg-gray-100 text-gray-700 px-3 py-1 rounded hover:bg-gray-200"
                >
                  Edit
                </a>
              </div>
            </div>

            {plan.description && (
              <p class="text-gray-700 mt-4">{plan.description}</p>
            )}
          </div>
        ))
      }
    </div>
  </div>
</Layout>
