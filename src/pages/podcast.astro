---
import Layout from "../layouts/Layout.astro";

interface SpotifyEpisode {
  name: string;
  description: string;
  release_date: string;
  external_urls: {
    spotify: string;
  };
  images: Array<{
    url: string;
    height: number;
    width: number;
  }>;
  id: string;
}

const authOptions = {
  method: "POST",
  url: "https://accounts.spotify.com/api/token",
  headers: {
    Authorization:
      "Basic " +
      Buffer.from(
        import.meta.env.SPOTIFY_CLIENT_ID +
          ":" +
          import.meta.env.SPOTIFY_CLIENT_SECRET
      ).toString("base64"),
    "Content-Type": "application/x-www-form-urlencoded",
  },
  body: new URLSearchParams({
    grant_type: "client_credentials",
  }).toString(),
};

const response = await fetch(authOptions.url, {
  method: authOptions.method,
  headers: authOptions.headers,
  body: authOptions.body,
});
const data = await response.json();
const accessToken = data.access_token;

const podcastEpisodes = await fetch(
  "https://api.spotify.com/v1/shows/6kVyePtw85mqjZvWqqQa7s/episodes",
  {
    method: "GET",
    headers: {
      Authorization: `Bearer ${accessToken}`,
    },
  }
);

const episodesData = await podcastEpisodes.json();
---

<Layout title="Podcast - Buried In The Bones">
  <section class="min-h-[96vh] pt-48">
    <h1
      class="text-6xl font-customFont uppercase text-center mb-12 px-12 md:pt-16"
    >
      Podcast
    </h1>
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 px-4">
      {
        episodesData.items.map(
          (episode: SpotifyEpisode) =>
            episode && (
              <div class="bg-white p-6 rounded-lg shadow-lg flex flex-col justify-between">
                <iframe
                  style="border-radius:12px"
                  src={`https://open.spotify.com/embed/episode/${episode.id}/video?utm_source=generator`}
                  width="100%"
                  height="300"
                  allowfullscreen=""
                  allow="autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture"
                  loading="lazy"
                  class="mb-4"
                />
                <h3 class="text-2xl font-customFont mb-2">{episode.name}</h3>
                <p class="text-gray-600 mb-4 overflow-auto">
                  {episode.description}
                </p>
                <div class="flex justify-between items-center">
                  <span class="text-sm text-gray-500">
                    {new Date(episode.release_date).toLocaleDateString()}
                  </span>
                  <a
                    href={episode.external_urls.spotify}
                    target="_blank"
                    rel="noopener noreferrer"
                    class="bg-rose-800 hover:bg-rose-700 text-white px-4 py-2 transition-colors"
                  >
                    Listen In Spotify
                  </a>
                </div>
              </div>
            )
        )
      }
    </div>
  </section>
</Layout>
